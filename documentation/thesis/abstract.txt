Hullámformátumú hangfájlokból a zenei hangok visszafejtése (Automatic Music Transcription, AMT) nehéz feladat, erre az általános esetre létezik sok szoftver. Ezek többnyire wav/mp3 fájlokból generálnak MIDI fájlt, ami tartalmazza a megszólaló hangok időpillanatát és hangmagasságát.
Ezen szakdolgozat a problémának egy részhalmazával foglalkozik, megmutatva, hogy a specializációval jobb eredmény érhető el. A Minecraft nevű játékban hallható Note Block mintákat tartalmazó hangfájlok felismerése a cél, a felismerés eredményét pedig egy erre a célra kifejlesztett szerkesztőprogram (Note Block Studio) saját formátumában bocsátjuk a felhasználó rendelkezésére.
A feladat elvégzésére készítek egy parancssori programot, amely időpillanatonként elemezve végigmegy a zenén, és kiadja a kért átiratot. Egy időpillanatban képezi az eredeti zene, illetve a hangminták spektrogramjait, és egy erre a célra létrehozott költségfüggvény, illetve a gradiense segítségével megkeresi a minimumhelyet, azaz azt, hogy melyik hangnak milyen hangerőn kell szólnia, hogy az eredeti zenéhez a lehető legközelebb kerüljön.
A programot egy 9,5 órányi zenét tartalmazó adathalmazon teszteltem, 4 különböző hangszert ismert fel többszólamú módon. Az nbswave nevű, Note Block Studio fájlt hullámformává szintetizálni képes program kimenetén a program az eredeti fájlokkal összehasonlítva 98,4%-os négyzetes hangerőpontosságot ért el a csendhez viszonyítva, a teljes adathalmazon.
Az elért eredmény mutatja, hogy a formátum sajátosságait kihasználva sokkal nagyobb pontosság érhető el, mint általános módszereket alkalmazva.

Transcribing waveform audio files into notes (Automatic Music Transcription, AMT) is a challenging task, and numerous software solutions exist for this general case. These typically convert wav/mp3 files into MIDI files, which include the timing and pitch of the notes played.
This thesis addresses a subset of the problem, demonstrating that specialization can achieve better results. The goal is to recognize audio files containing Note Block sound samples from the game Minecraft and provide the recognized output in the format of a dedicated editing tool, Note Block Studio. 
To accomplish this task, I developed a command-line program that processes the music by analyzing it moment by moment and generates the desired transcription. At each moment in time, the program generates spectrograms of both the original music and the sound samples, then uses a custom cost function and its gradient to find the minimum, determining which sounds should play at what volume to approximate the original music as closely as possible. 
The program was tested on a dataset containing 9.5 hours of music idenifying four different instruments polyphonically. When evaluated on the output of a program called nbswave — which synthesizes Note Block Studio files into waveforms — the program achieved a squared volume accuracy of 98.4% relative to silence when compared to the original files, across the entire dataset.
The results show that leveraging the specific characteristics of the format can yield significantly higher accuracy compared to general-purpose methods.
